#ifndef	FTM_LOG_H_
#define	FTM_LOG_H_

#include "ftm_types.h"

typedef	enum	FTM_LOG_TYPE_ENUM
{
	FTM_LOG_TYPE_LOGIN,
	FTM_LOG_TYPE_LOGOUT,
	FTM_LOG_TYPE_ADD_CCTV,
	FTM_LOG_TYPE_DEL_CCTV,
	FTM_LOG_TYPE_ADD_SWITCH,
	FTM_LOG_TYPE_DEL_SWITCH,
	FTM_LOG_TYPE_ADD_ALARM,
	FTM_LOG_TYPE_DEL_ALARM
} FTM_LOG_TYPE, _PTR_ FTM_LOG_TYPE_PTR;

typedef	struct	FTM_LOG_PARAM_LOGIN_STRUCT
{
	FTM_CHAR	pID[FTM_ID_LEN + 1];
}	FTM_LOG_PARAM_LOGIN, _PTR_ FTM_LOG_PARAM_LOGIN_PTR;

typedef	struct	FTM_LOG_PARAM_ADD_CCTV_STRUCT
{
	FTM_CHAR	pID[FTM_ID_LEN + 1];
	FTM_CHAR	pIP[FTM_IP_LEN + 1];
}	FTM_LOG_PARAM_ADD_CCTV, _PTR_ FTM_LOG_PARAM_ADD_CCTV_PTR;

typedef	struct	FTM_LOG_PARAM_DEL_CCTV_STRUCT
{
	FTM_CHAR	pID[FTM_ID_LEN + 1];
}	FTM_LOG_PARAM_DEL_CCTV, _PTR_ FTM_LOG_PARAM_DEL_CCTV_PTR;

typedef	struct	FTM_LOG_PARAM_ADD_SWITCH_STRUCT
{
	FTM_CHAR	pID[FTM_ID_LEN + 1];
	FTM_CHAR	pIP[FTM_IP_LEN + 1];
}	FTM_LOG_PARAM_ADD_SWITCH, _PTR_ FTM_LOG_PARAM_ADD_SWITCH_PTR;

typedef	struct	FTM_LOG_PARAM_DEL_SWITCH_STRUCT
{
	FTM_CHAR	pID[FTM_ID_LEN + 1];
}	FTM_LOG_PARAM_DEL_SWITCH, _PTR_ FTM_LOG_PARAM_DEL_SWITCH_PTR;

typedef	union	FTM_LOG_PARAMS_UNION
{
	FTM_LOG_PARAM_LOGIN	xLogin;
	FTM_LOG_PARAM_ADD_CCTV	xAddCCTV;
	FTM_LOG_PARAM_DEL_CCTV	xDelCCTV;
	FTM_LOG_PARAM_ADD_SWITCH	xAddSwitch;
	FTM_LOG_PARAM_DEL_SWITCH	xDelSwitch;
}	FTM_LOG_PARAMS, _PTR_ FTM_LOG_PARAMS_PTR;

typedef	struct	FTM_LOG_STRUCT
{
	FTM_CHAR		pTime[FTM_TIME_LEN+1];
	FTM_LOG_TYPE	xType;
	FTM_LOG_PARAMS	xParams;
}	FTM_LOG, _PTR_ FTM_LOG_PTR;

#endif
